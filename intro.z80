; 1Kraftwerk

; Amstrad CPC 1K intro by PulkoMandy/Shinra for Forever 2020
; Music by Kraftwerk

; ---------------------------------
; Useful system vectors
; ---------------------------------

SYS_PEN  equ $BBDE
	; A = new pen
	; AF is corrupt, and all other registers are preserved

SYS_GETPEN equ $BBE1

SYS_INK equ $BC32
	; A = PEN
	; BC = INK (x2 because flashing)
	; AF, BC, DE and HL are corrupt, and all others are preserved
SYS_SET_BORDER equ $BC38

SYS_MOVE   equ $BBC0
	; AF, BC, DE and HL are corrupt
SYS_SETORG equ $BBC9
	; AF, BC, DE and HL are corrupt
SYS_LINE   equ $BBF6
	; AF, BC, DE and HL are corrupt
	; DE = X
	; HL = Y

SYS_FILL equ $BD52
	; A = pen number
	; HL = work buffer
	; DE = work buffer size

; It starts!
_start

; We expect to be called with RUN", which sets mode 1 and clear the screen.

; Set the color palette
	XOR A
	LD B,$06 ; RED
	LD C,B
	CALL SYS_INK

	LD A,1
	LD B,$00 ; BLACK
	LD C,B
	CALL SYS_INK

	LD A,2
	LD B,$1A ; WHITE
	LD C,B
	CALL SYS_INK

	LD B,$00 ; BLACK
	LD C,B
	CALL SYS_SET_BORDER

	LD A,1
	LD IX, MEN - 4

newpoly
	; Move on to pen 2 if we were asked to
	BIT 6,D ; Shall we chage inks?
	CALL NZ,SYS_PEN

	LD BC, 4
	ADD IX,BC

	LD E,(IX+0)
	LD D,(IX+1)
	LD L,(IX+2)
	LD H,(IX+3)

	CALL SYS_MOVE

newline
	;CALL &BD19
	CALL SYS_LINE

	LD BC, 4
	ADD IX,BC

	LD E,(IX+0)
	LD D,(IX+1)
	LD L,(IX+2)
	LD H,(IX+3)

	BIT 7,D
	JR Z, newline

	; Fill the polygon, we need to move to the fill coordinates
	PUSH DE
	LD A,0x1F
	AND D
	LD D,A
	CALL SYS_MOVE

	; Use the correct color
	CALL SYS_GETPEN
	; fill the poly
	;LD HL,fillbuf but hopefully whatever value is ok
	;LD DE,... DE should holdthe buffer size, but whatever value it has is ok
	CALL SYS_FILL

	POP DE
	LD A,2

	BIT 5,D ; Are we done yet?
	JR Z,newpoly

	LD A,1
	LD HL,env
	CALL &BCBC

	LD A,3
	LD (env+3),A
	LD HL,env
	CALL &BCBC

	LD A,2
	LD HL,henv
	CALL &BCBC

	LD A,4
	LD HL,envnoise
	CALL &BCBC

	LD A,1
	LD HL,envt
	CALL &BCBF

	LD A,96
	LD (envt+2),A
	LD A,2
	LD HL,envt
	CALL &BCBF

	; let the music play!
let_the_music
	LD HL,(mp1)

	CALL &BCAA
	JR NC,queue_full

	; Note played, move on to next one for next time
	LD HL,(mp1)
	LD DE,9
	ADD HL,DE

	XOR A
	CP (HL)
	JR NZ,cont

	INC HL
	DEC (HL)
	JR Z, contloop
	LD HL,music
	JR cont

contloop
	INC (HL)
	LD HL,music.loop
cont
	LD (mp1),HL

queue_full

	LD HL,(mp2)

	CALL &BCAA
	JR NC,full2

	; Note played, move on to next one for next time
	LD HL,(mp2)
	LD DE,9
	ADD HL,DE

	XOR A
	CP (HL)
	JR NZ,cont2

	INC HL
	DEC (HL)
	JR Z,cl2
	LD HL,ch2
	JR cont2

cl2
	INC (HL)
	LD HL,ch2.loop
cont2
	LD (mp2),HL
	
full2
	LD HL,(mp3)

	CALL &BCAA
	JR NC,let_the_music

	; Note played, move on to next one for next time
	LD HL,(mp3)
	LD DE,9
	ADD HL,DE

	XOR A
	CP (HL)
	JR NZ,cont3
	LD HL,ch3.loop
cont3
	LD (mp3),HL
	
	JR let_the_music

; The DATA

; A marker to easily spot the escape sequences (fill, end of stream, set pen)
k equ 0x8000
p equ 0x4000
e equ 0x2000

; The men

MEN
        defw  41,   0,  53,   9, 66,  97, 58, 104, 64, 130, 73, 135,  80, 136
		defw  76, 147,  79, 156, 86, 159, 93, 155, 94, 146, 91, 136, 103, 131
		defw 112, 107, 104,  83, 98,  83, 99,  73, 97,  40, 91,  10,  93,   0
		defw  80,   0,  82,  70, 68,  42, 58,   0, k|55, 4

        defw 229, 0, 233, 6, 231, 39, 233, 86, 222, 102, 227, 129, 239, 137
		defw 236, 151, 245, 158, 251, 155, 252, 139, 266, 134, 280, 111
		defw 278, 90, 264, 116, 253, 9, 256, 4, 250, 1, 246, 12, 247, 72
		defw 243, 29, 241, 0, k|235, 4

        defw 377, 0, 381, 85, 369, 98, 379, 123, 392, 129, 390, 146, 396, 149
		defw 405, 144, 405, 129, 417, 124, 438, 98, 422, 98, 415, 109, 411, 100
		defw 406, 8, 412, 0, 396, 0, 398, 69, 392, 52, 386, 0, k|385, 6

        defw 559, 0, 569, 12, 565, 33, 576, 83, 577, 98, 574, 116, 570, 109
		defw 571, 96, 564, 96, 559, 110, 570, 137, 587, 145, 586, 154
		defw 590, 164, 600, 163, 603, 152, 598, 143, 612, 135, 619, 106
		defw 610, 82, 607, 38, 599, 9, 604, 1, 596, 0, 586, 6
		defw 592, 71, 578, 42, 578, 12, 574, 0, k|p|565, 4

        defw 52,  0,  56, 85,   6, 85,   6, 98, 105, 98, 105, 85,  62, 85,  59, 0, k|55, 4
        defw 236, 0, 240, 85, 190, 85, 190, 98, 289, 98, 289, 85, 246, 85, 243, 0, k|240, 4
        defw 397, 0, 401, 85, 352, 85, 352, 98, 451, 98, 451, 85, 408, 85, 404, 0, k|400, 4
        defw 582, 0, 586, 85, 537, 85, 537, 98, 636, 98, 636, 85, 593, 85, 590, 0, k|e|585, 4


	macro note
	defb \1,\2,\3
	defw \4
	defb \5,\6
	defw \7
	endm

C3 equ 478
D3 equ 426
F3 equ 358
C4 equ 239
Ds4 equ 201
A4 equ 142
C5 equ 119
D5 equ 106
E5 equ 95
F5 equ 89
Fs5 equ 84
G5 equ 80
A5 equ 71
C6 equ 60

mp1 defw music
mp2 defw ch2
mp3 defw ch3

music
		; Note definition:
		; Byte 0 = channel status
		; Byte 1 = volume enveloppe
		; Byte 2 = tone enveloppe
		; Bytes 3, 4 = tone period
		; Byte 5 = noise period
		; Byte 6 = start volume
		; Byte 7,8 = duration or repeat count
		note 1,0,1,C4,0,15,54  ; 54
		note 1,0,0,C4,0,0,50   ; 104
		note 1,0,1,C4,0,15,57  ; 161
		note 1,0,0,C4,0,0,50   ; 211
		note 1,0,1,C4,0,15,57  ; 268
		note 1,0,0,C4,0,0,47   ; 315
		note 1,0,1,C4,0,15,50  ; 365
		note 1,0,0,C4,0,0,48   ; 413

		note 1,2,0,D3,0,16,355 ; 768

		note 1,3,0,Ds4,0,0,24
		note 1,3,0,Fs5,0,0,24
		note 1,3,0,C5,0,0,24   ; 840
		note 1,0,0,C5,0,0,64   ; 904

		defb 0,3

music.loop
		note 1,1,0,D3,0,0,-2
		note 1,1,0,C3,0,0,-2
		note 1,1,0,D3,0,0,-2
		note 1,1,0,C3,0,0,-2
		note 1,1,0,D3,0,0,-2
		note 1,0,0,C3,0,0,32
		note 1,1,0,F3,0,0,-2
		note 1,0,0,C3,0,0,32
		note 1,1,0,D3,0,0,-2
		note 1,1,0,C3,0,0,-2
		note 1,1,0,D3,0,0,-2
		note 1,1,0,C3,0,0,-2
		note 1,1,0,D3,0,0,-6
		note 1,0,0,C3,0,0,32

		defb 0,1

ch2
		note 2,0,0,C4,0,0,26
		note 2,0,1,C4,0,7,54
		note 2,0,0,C4,0,0,50
		note 2,0,1,C4,0,7,57
		note 2,0,0,C4,0,0,50
		note 2,0,1,C4,0,7,57
		note 2,0,0,C4,0,0,47
		note 2,0,1,C4,0,7,50
		note 2,0,0,C4,0,0,48 ; 439

		note 2,0,0,C3,0,0, 768 - 439 - 6 * 13

		note 2,4,0,1,1,0,-13

		note 2,0,0,C3,0,0, 904 - 768

		defb 0,3

ch2.loop
		note 2,0,0,C3,0,0,2*32*32

		note 2,3,0,D5,0,0,32*3
		note 2,3,0,D5,0,0,32
		note 2,3,0,F5,0,0,32
		note 2,3,0,D5,0,0,32*3
		note 2,3,0,F5,0,0,32*2
		note 2,3,0,G5,0,0,32
		note 2,3,0,C6,0,0,32
		note 2,3,0,A5,0,0,32*4

		note 2,3,0,A4,0,0,32*3
		note 2,3,0,A4,0,0,32
		note 2,3,0,C5,0,0,32
		note 2,3,0,A4,0,0,32*3
		note 2,3,0,C5,0,0,32*2
		note 2,3,0,D5,0,0,32
		note 2,3,0,G5,0,0,32
		note 2,3,0,E5,0,0,32*4
		defb 0,1

ch3
		note 4,0,0,C3,0,0,904 * 3 + 32*32
ch3.loop
		note 4,1,2,C3,0,0,32*2
		note 4,1,2,C3,6,0,32*2
		note 4,1,2,C3,0,0,32
		note 4,1,2,C3,0,0,32
		note 4,1,2,C3,6,0,32*2
		defb 0

env
		; Volume enveloppe
		; Byte 0 = number of sections
			; Byte 0 = step count
			; Byte 1 = step size
			; Byte 2 = pause time
		defb 1, 16,-1,1

henv
		defb 1

		; Section 1 (HW)
		defb 8 + 128
		defw 53

envnoise
		defb 2
		defb 0, 15, 3
		defb 0, 0, 3

envt
		; Tone enveloppe
		; Byte 0 = number of sections
			; Byte 0 = step count
			; Byte 1 = step size
			; Byte 2 = step time
		defb 1,127,-2,1

fillbuf
	; Arbitrary free space used by the FILL routine
